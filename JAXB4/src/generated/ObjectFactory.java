//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.11.25 at 12:41:13 PM EET 
//


package generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _HusbandName_QNAME = new QName("", "name");
    private final static QName _HusbandEmail_QNAME = new QName("", "email");
    private final static QName _HusbandEyesColor_QNAME = new QName("", "eyes_color");
    private final static QName _HusbandHairColor_QNAME = new QName("", "hair_color");
    private final static QName _HusbandHeight_QNAME = new QName("", "height");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Register }
     * 
     */
    public Register createRegister() {
        return new Register();
    }

    /**
     * Create an instance of {@link Current }
     * 
     */
    public Current createCurrent() {
        return new Current();
    }

    /**
     * Create an instance of {@link Future }
     * 
     */
    public Future createFuture() {
        return new Future();
    }

    /**
     * Create an instance of {@link Past }
     * 
     */
    public Past createPast() {
        return new Past();
    }

    /**
     * Create an instance of {@link Husband }
     * 
     */
    public Husband createHusband() {
        return new Husband();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name", scope = Husband.class)
    public JAXBElement<String> createHusbandName(String value) {
        return new JAXBElement<String>(_HusbandName_QNAME, String.class, Husband.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "email", scope = Husband.class)
    public JAXBElement<String> createHusbandEmail(String value) {
        return new JAXBElement<String>(_HusbandEmail_QNAME, String.class, Husband.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EyesColor }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "eyes_color", scope = Husband.class)
    public JAXBElement<EyesColor> createHusbandEyesColor(EyesColor value) {
        return new JAXBElement<EyesColor>(_HusbandEyesColor_QNAME, EyesColor.class, Husband.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HairColor }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "hair_color", scope = Husband.class)
    public JAXBElement<HairColor> createHusbandHairColor(HairColor value) {
        return new JAXBElement<HairColor>(_HusbandHairColor_QNAME, HairColor.class, Husband.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "height", scope = Husband.class)
    public JAXBElement<Double> createHusbandHeight(Double value) {
        return new JAXBElement<Double>(_HusbandHeight_QNAME, Double.class, Husband.class, value);
    }

}
